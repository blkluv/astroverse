---
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import PostCard from "@components/CommonCard.astro";
import Pagination from "@components/Pagination.astro";
import { getTagMetadata } from "@consts";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const uniqueTags = [
    ...new Set(allPosts.flatMap(post => post.data.tags || []))
  ].filter(Boolean);

  return uniqueTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags?.includes(tag)
    ).sort((a, b) =>
      new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
    );

    const pageSize = 12;
    const totalPages = Math.ceil(filteredPosts.length / pageSize);

    return Array.from({ length: totalPages }, (_, index) => ({
      params: { 
        tag: encodeURIComponent(tag), 
        page: (index + 1).toString() 
      },
      props: {
        page: {
          data: filteredPosts.slice(index * pageSize, (index + 1) * pageSize),
          currentPage: index + 1,
          lastPage: totalPages,
          tag: tag
        }
      }
    }));
  });
}

const { tag } = Astro.params;
const { page } = Astro.props;
const { title, description } = getTagMetadata(tag);
---

<BaseLayout title={title} description={description}>
  <h1 class="text-3xl font-bold mb-8">Posts tagged: {tag}</h1>
  
  <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
    {page.data.map((post) => (
      <PostCard 
        post={post} 
        class="hover:scale-105 transition-transform duration-200"
      />
    ))}
  </div>

  {page.lastPage > 1 && (
    <div class="mt-12">
      <Pagination
        currentPage={page.currentPage}
        lastPage={page.lastPage}
        urlPrev={page.currentPage > 1
          ? `/tags/${tag}/${page.currentPage - 1}`
          : null}
        urlNext={page.currentPage < page.lastPage
          ? `/tags/${tag}/${page.currentPage + 1}`
          : null}
        basePath={`/tags/${tag}`}
        maxDisplayedPages={5}
      />
    </div>
  )}
</BaseLayout>