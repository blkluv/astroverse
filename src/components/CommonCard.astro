---
import type { CollectionEntry } from "astro:content";
import OptimizedCover from "@components/OptimizedPicture.astro";
import FormattedDate from "@components/FormattedDate.astro";

interface Props {
  post: CollectionEntry<"posts">;
  class?: string; // Added to support class prop
}

const { post, class: className = "" } = Astro.props;
---

<article 
  class={`relative overflow-hidden rounded-xl bg-white transition-all duration-300 hover:-translate-y-1 hover:scale-[1.02] dark:bg-neutral-900 ${className}`}
>
  <a 
    href={`/posts/${post.slug}/`} 
    class="block focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
    aria-label={`Read ${post.data.title}`}
  >
    <OptimizedCover 
      src={post.data.cover} 
      alt={post.data.coverAlt || post.data.title}
      class="w-full h-48 object-cover md:h-56"
      widths={[400, 600, 800]}
      sizes="(max-width: 768px) 100vw, 50vw"
    />
    
    <div class="absolute inset-0 bg-gradient-to-t from-black/80 to-transparent via-black/20 p-5 md:p-6 flex flex-col justify-end">
      <div class="flex items-center gap-3 text-xs text-white/80 mb-2">
        {post.data.tags?.length > 0 && (
          <span class="inline-flex flex-wrap gap-2">
            {post.data.tags.map(tag => (
              <span class="px-2 py-1 bg-black/30 rounded-full backdrop-blur-sm">
                {tag}
              </span>
            ))}
          </span>
        )}
        <FormattedDate 
          date={post.data.pubDate} 
          class="ml-auto text-white/70" 
        />
      </div>
      
      <h3 class="mt-2 text-lg font-bold text-white line-clamp-2">
        {post.data.title}
      </h3>
      
      {post.data.description && (
        <p class="mt-1 text-sm text-white/80 line-clamp-2">
          {post.data.description}
        </p>
      )}
    </div>
  </a>
</article>